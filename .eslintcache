[{"C:\\Users\\david\\Documents\\e-commerce\\src\\index.js":"1","C:\\Users\\david\\Documents\\e-commerce\\src\\App.js":"2","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Products\\Product\\styles.js":"5","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\index.js":"6","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Navbar\\styles.js":"8","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Products\\styles.js":"9","C:\\Users\\david\\Documents\\e-commerce\\src\\lib\\commerce.js":"10","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Cart\\styles.js":"12","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":148,"mtime":1611788590416,"results":"21","hashOfConfig":"22"},{"size":3108,"mtime":1612390639222,"results":"23","hashOfConfig":"22"},{"size":1278,"mtime":1611863534298,"results":"24","hashOfConfig":"22"},{"size":1443,"mtime":1611863534275,"results":"25","hashOfConfig":"22"},{"size":404,"mtime":1611952187061,"results":"26","hashOfConfig":"22"},{"size":233,"mtime":1612127137170,"results":"27","hashOfConfig":"22"},{"size":1480,"mtime":1611954701179,"results":"28","hashOfConfig":"22"},{"size":1631,"mtime":1611816490276,"results":"29","hashOfConfig":"22"},{"size":300,"mtime":1611817106393,"results":"30","hashOfConfig":"22"},{"size":126,"mtime":1611855463160,"results":"31","hashOfConfig":"22"},{"size":1986,"mtime":1612380007714,"results":"32","hashOfConfig":"22"},{"size":725,"mtime":1611957122144,"results":"33","hashOfConfig":"22"},{"size":1365,"mtime":1611956685741,"results":"34","hashOfConfig":"22"},{"size":418,"mtime":1611949456283,"results":"35","hashOfConfig":"22"},{"size":3890,"mtime":1612381226784,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1612126838745,"results":"37","hashOfConfig":"22"},{"size":5517,"mtime":1612220414204,"results":"38","hashOfConfig":"22"},{"size":2570,"mtime":1612390639222,"results":"39","hashOfConfig":"22"},{"size":612,"mtime":1612381226799,"results":"40","hashOfConfig":"22"},{"size":1105,"mtime":1612249523445,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1jtt6bh",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\david\\Documents\\e-commerce\\src\\index.js",[],["86","87"],"C:\\Users\\david\\Documents\\e-commerce\\src\\App.js",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\index.js",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Navbar\\Navbar.jsx",["88","89"],"import React from 'react'\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core'\r\nimport { ShoppingCart } from '@material-ui/icons'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport logo from '../../assets/viberry_logo.jpg'\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image} />\r\n                        Feel the vibe\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/' && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={Link} to=\"/cart\" arial-label=\"Show cart items\" color=\"inherit\">\r\n                            <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                <ShoppingCart/>\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div> )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Products\\styles.js",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\lib\\commerce.js",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["90"],"import React, { useState, useEffect } from 'react'\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { commerce } from '../../../lib/commerce';\r\nimport useStyles from './styles';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\n\r\nconst steps = ['Shipping addres', 'Payment details'];\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const [isFinished, setIsFinished] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\r\n\r\n                setCheckoutToken(token);\r\n            } catch (error) {\r\n                history.pushState('/');\r\n            }\r\n        }\r\n\r\n        generateToken();\r\n    }, [cart]);\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n\r\n        nextStep();\r\n    }\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            setIsFinished(true)\r\n        }, 3000)\r\n    }\r\n\r\n    let Confirmation = () => order.customer ? (\r\n        <>\r\n            <div>\r\n                <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}</Typography>\r\n                <Divider className={classes.divider} />\r\n                <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\r\n            </div>   \r\n            <br/>\r\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to home</Button>\r\n        </>\r\n    ) : isFinished ? (\r\n        <>\r\n        <div>\r\n            <Typography variant=\"h5\">Thank you for your purchase</Typography>\r\n            <Divider className={classes.divider} />\r\n        </div>   \r\n        <br/>\r\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to home</Button>\r\n        </>\r\n    ) : (\r\n        <div className={classes.spinner}>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n\r\n    if(error) {\r\n        <>\r\n        <Typography variant=\"h5\">Error: {error}</Typography>\r\n        <br/>\r\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to home</Button>\r\n        </>\r\n    }\r\n\r\n    const Form = () => activeStep === 0\r\n        ? <AddressForm checkoutToken={checkoutToken} next={next} />\r\n        : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout}/>\r\n\r\n    return (\r\n        <>\r\n        <CssBaseline />\r\n            <div className={classes.toolbar}/>\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((step) => (\r\n                             <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["91","92"],"import React, { useState, useEffect } from 'react'\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { commerce } from '../../lib/commerce';\r\n\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id:code, label:name}));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({id:code, label:name}));\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }))\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode)\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\r\n        \r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput required name='firstName' label='First name' />\r\n                        <FormInput required name='lastName' label='Last name' />\r\n                        <FormInput required name='address1' label='Address' />\r\n                        <FormInput required name='email' label='Email' />\r\n                        <FormInput required name='city' label='City' />\r\n                        <FormInput required name='zip' label='ZIP / Postal code' />\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                <MenuItem key={country.id} value={country.id}>\r\n                                    {country.label}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                    {subdivision.label}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {options.map((option) => (\r\n                                <MenuItem key={option.id} value={option.id}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br/>\r\n\r\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddressForm","C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\david\\Documents\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":46,"nodeType":"99","messageId":"100","endLine":2,"endColumn":54},{"ruleId":"97","severity":1,"message":"101","line":2,"column":56,"nodeType":"99","messageId":"100","endLine":2,"endColumn":60},{"ruleId":"102","severity":1,"message":"103","line":31,"column":8,"nodeType":"104","endLine":31,"endColumn":14,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":45,"column":8,"nodeType":"104","endLine":45,"endColumn":10,"suggestions":"107"},{"ruleId":"102","severity":1,"message":"108","line":53,"column":8,"nodeType":"104","endLine":53,"endColumn":29,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["113"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [cart, history]",{"range":"121","text":"122"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"123","text":"124"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"125","text":"126"},[1199,1205],"[cart, history]",[2102,2104],"[checkoutToken.id]",[2369,2390],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]